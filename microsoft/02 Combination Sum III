class Solution {
public:
    
    void solve(int ind, int k , int target, vector<int> arr, set<vector<int>>& ans, vector<int> ds){
        
        if(k == 0 && target == 0){
                // sort(ds.begin(), ds.end());
                ans.insert(ds);
                return;
        }
        
        if(target < 0){
            return;
            
        }
        
        for(int i =ind+1; i<=9; i++){
            ds.push_back(arr[i]);
            solve(i, k-1, target-arr[i], arr, ans, ds);
            ds.pop_back();
        }
        
       
    }
    
    
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> arr;
        for(int i =0; i<=9; i++){
            arr.push_back(i);
        }
        set<vector<int>> ans;
        vector<int> ds;
        
        solve(0, k, n, arr, ans, ds);
        vector<vector<int>> ans1;
        
        for(auto &it : ans){
            ans1.push_back(it);
        }
        
        return ans1;
    }
};
